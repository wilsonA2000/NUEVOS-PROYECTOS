# Generated by Django 4.2.7 on 2025-08-05 13:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('properties', '0003_propertyvideo_youtube_url_alter_propertyvideo_video'),
        ('contracts', '0004_alter_contract_status_biometricauthentication'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractObjection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('objection_type', models.CharField(choices=[('ECONOMIC', 'Términos Económicos'), ('DURATION', 'Duración del Contrato'), ('SERVICES', 'Servicios Incluidos'), ('OBLIGATIONS', 'Obligaciones y Responsabilidades'), ('CLAUSES', 'Cláusulas Específicas'), ('GUARANTEES', 'Garantías Requeridas'), ('OTHER', 'Otros Aspectos')], default='OTHER', max_length=20, verbose_name='Tipo de objeción')),
                ('field_reference', models.CharField(blank=True, help_text='Campo específico del contrato al que se refiere', max_length=100, verbose_name='Campo específico')),
                ('current_value', models.TextField(help_text='Valor actual del campo objetado', verbose_name='Valor actual')),
                ('objection_text', models.TextField(help_text='Explicación detallada de la objeción', verbose_name='Descripción de la objeción')),
                ('proposed_modification', models.TextField(blank=True, help_text='Propuesta específica de cambio', verbose_name='Modificación propuesta')),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente de Respuesta'), ('UNDER_REVIEW', 'En Revisión por Arrendador'), ('ACCEPTED', 'Aceptada - Modificación Aplicada'), ('REJECTED', 'Rechazada por Arrendador'), ('PARTIALLY_ACCEPTED', 'Parcialmente Aceptada'), ('RESOLVED', 'Resuelta'), ('WITHDRAWN', 'Retirada por Arrendatario')], default='PENDING', max_length=20, verbose_name='Estado')),
                ('priority', models.CharField(choices=[('LOW', 'Baja'), ('MEDIUM', 'Media'), ('HIGH', 'Alta'), ('CRITICAL', 'Crítica')], default='MEDIUM', max_length=10, verbose_name='Prioridad')),
                ('landlord_response', models.TextField(blank=True, help_text='Respuesta o justificación del arrendador', verbose_name='Respuesta del arrendador')),
                ('landlord_counter_proposal', models.TextField(blank=True, help_text='Contrapropuesta alternativa del arrendador', verbose_name='Contrapropuesta del arrendador')),
                ('final_resolution', models.TextField(blank=True, help_text='Descripción de cómo se resolvió la objeción', verbose_name='Resolución final')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Presentada el')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Revisada el')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resuelta el')),
                ('supporting_documents', models.JSONField(default=list, help_text='URLs o referencias a documentos que apoyan la objeción', verbose_name='Documentos de soporte')),
            ],
            options={
                'verbose_name': 'Objeción de Contrato',
                'verbose_name_plural': 'Objeciones de Contratos',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='LandlordControlledContract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_number', models.CharField(help_text='Formato: VH-YYYY-NNNNNN', max_length=20, unique=True, verbose_name='Número de contrato')),
                ('contract_type', models.CharField(choices=[('rental_urban', 'Arrendamiento de Vivienda Urbana'), ('rental_commercial', 'Arrendamiento de Local Comercial'), ('rental_room', 'Arrendamiento de Habitación'), ('rental_rural', 'Arrendamiento de Inmueble Rural'), ('service_provider', 'Contrato de Prestación de Servicios')], default='rental_urban', max_length=20, verbose_name='Tipo de contrato')),
                ('title', models.CharField(help_text='Título descriptivo del contrato', max_length=300, verbose_name='Título del contrato')),
                ('description', models.TextField(blank=True, help_text='Descripción general del acuerdo', max_length=1000, verbose_name='Descripción del contrato')),
                ('current_state', models.CharField(choices=[('DRAFT', 'Borrador del Arrendador'), ('LANDLORD_COMPLETING', 'Arrendador Completando Datos'), ('TENANT_INVITED', 'Arrendatario Invitado'), ('TENANT_REVIEWING', 'En Revisión por Arrendatario'), ('OBJECTIONS_PENDING', 'Objeciones Pendientes de Respuesta'), ('NEGOTIATION_IN_PROGRESS', 'Negociación en Progreso'), ('TENANT_DATA_PENDING', 'Esperando Datos del Arrendatario'), ('TENANT_AUTHENTICATION', 'Arrendatario en Proceso de Autenticación'), ('TENANT_SIGNED', 'Firmado por Arrendatario'), ('LANDLORD_AUTHENTICATION', 'Arrendador en Proceso de Autenticación'), ('LANDLORD_SIGNED', 'Firmado por Arrendador'), ('READY_TO_PUBLISH', 'Listo para Publicar'), ('PUBLISHED', 'Publicado - Vida Jurídica'), ('ACTIVE', 'Contrato Activo'), ('EXPIRED', 'Vencido'), ('TERMINATED', 'Terminado'), ('CANCELLED', 'Cancelado')], default='DRAFT', max_length=30, verbose_name='Estado actual')),
                ('landlord_data', models.JSONField(default=dict, help_text='Información proporcionada por el arrendador', verbose_name='Datos del Arrendador')),
                ('property_data', models.JSONField(default=dict, help_text='Información específica de la propiedad para el contrato', verbose_name='Datos de la Propiedad')),
                ('economic_terms', models.JSONField(default=dict, help_text='Canon, depósitos, incrementos, etc.', verbose_name='Términos Económicos')),
                ('contract_terms', models.JSONField(default=dict, help_text='Duración, servicios, obligaciones específicas', verbose_name='Términos del Contrato')),
                ('special_clauses', models.JSONField(default=list, help_text='Cláusulas adicionales específicas de este contrato', verbose_name='Cláusulas Especiales')),
                ('tenant_data', models.JSONField(default=dict, help_text='Información mínima proporcionada por el arrendatario', verbose_name='Datos del Arrendatario')),
                ('has_pending_objections', models.BooleanField(default=False, verbose_name='Tiene objeciones pendientes')),
                ('objections_count', models.PositiveIntegerField(default=0, verbose_name='Número de objeciones')),
                ('last_objection_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de última objeción')),
                ('landlord_approved', models.BooleanField(default=False, verbose_name='Aprobado por arrendador')),
                ('tenant_approved', models.BooleanField(default=False, verbose_name='Aprobado por arrendatario')),
                ('landlord_approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación del arrendador')),
                ('tenant_approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación del arrendatario')),
                ('invitation_token', models.CharField(blank=True, help_text='Token único para que el arrendatario acceda al contrato', max_length=255, null=True, unique=True, verbose_name='Token de invitación')),
                ('invitation_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Invitación enviada')),
                ('invitation_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Invitación expira')),
                ('tenant_identifier', models.CharField(help_text='Cédula o email para identificar al arrendatario', max_length=50, verbose_name='Identificador del arrendatario')),
                ('invitation_accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Invitación aceptada')),
                ('tenant_signed', models.BooleanField(default=False, verbose_name='Firmado por arrendatario')),
                ('tenant_signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de firma del arrendatario')),
                ('tenant_signature_data', models.JSONField(default=dict, help_text='Datos de autenticación biométrica del arrendatario', verbose_name='Datos de firma del arrendatario')),
                ('landlord_signed', models.BooleanField(default=False, verbose_name='Firmado por arrendador')),
                ('landlord_signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de firma del arrendador')),
                ('landlord_signature_data', models.JSONField(default=dict, help_text='Datos de autenticación biométrica del arrendador', verbose_name='Datos de firma del arrendador')),
                ('published', models.BooleanField(default=False, verbose_name='Publicado')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de publicación')),
                ('start_date', models.DateField(blank=True, help_text='Fecha en que inicia la vigencia del contrato', null=True, verbose_name='Fecha de inicio del contrato')),
                ('end_date', models.DateField(blank=True, help_text='Fecha en que termina la vigencia del contrato', null=True, verbose_name='Fecha de fin del contrato')),
                ('final_pdf_file', models.FileField(blank=True, null=True, upload_to='landlord_contracts/pdfs/', verbose_name='PDF final del contrato')),
                ('pdf_generated_at', models.DateTimeField(blank=True, null=True, verbose_name='PDF generado el')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('workflow_history', models.JSONField(default=list, help_text='Registro de cambios de estado y acciones', verbose_name='Historial del workflow')),
                ('landlord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_landlord_contracts', to=settings.AUTH_USER_MODEL, verbose_name='Arrendador (Controlador del Contrato)')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='landlord_contracts', to='properties.property', verbose_name='Propiedad')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_landlord_contracts', to=settings.AUTH_USER_MODEL, verbose_name='Publicado por')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_landlord_contracts', to=settings.AUTH_USER_MODEL, verbose_name='Arrendatario')),
            ],
            options={
                'verbose_name': 'Contrato Controlado por Arrendador',
                'verbose_name_plural': 'Contratos Controlados por Arrendador',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LandlordContractGuarantee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('guarantee_type', models.CharField(choices=[('DEPOSIT', 'Depósito en Dinero'), ('CO_SIGNER', 'Codeudor Solidario'), ('JOINT_DEBTOR', 'Deudor Solidario'), ('BANK_GUARANTEE', 'Garantía Bancaria'), ('INSURANCE_POLICY', 'Póliza de Seguro de Arrendamiento'), ('REAL_ESTATE_GUARANTEE', 'Garantía Inmobiliaria'), ('PROMISSORY_NOTE', 'Pagaré'), ('OTHER', 'Otra Garantía')], max_length=25, verbose_name='Tipo de garantía')),
                ('title', models.CharField(help_text='Descripción breve de la garantía', max_length=200, verbose_name='Título de la garantía')),
                ('description', models.TextField(help_text='Descripción completa de la garantía', verbose_name='Descripción detallada')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Valor en pesos colombianos', max_digits=15, null=True, verbose_name='Monto de la garantía')),
                ('currency', models.CharField(default='COP', help_text='Código ISO de la moneda', max_length=3, verbose_name='Moneda')),
                ('co_signer_data', models.JSONField(default=dict, help_text='Información completa del codeudor si aplica', verbose_name='Datos del codeudor')),
                ('supporting_documents', models.JSONField(default=list, help_text='Lista de documentos que respaldan la garantía', verbose_name='Documentos de soporte')),
                ('policy_number', models.CharField(blank=True, help_text='Número de identificación de la póliza o garantía', max_length=100, verbose_name='Número de póliza/garantía')),
                ('issuer', models.CharField(blank=True, help_text='Banco, aseguradora o entidad que emite la garantía', max_length=200, verbose_name='Entidad emisora')),
                ('effective_date', models.DateField(blank=True, help_text='Fecha desde la cual es efectiva la garantía', null=True, verbose_name='Fecha de vigencia')),
                ('expiry_date', models.DateField(blank=True, help_text='Fecha hasta la cual es válida la garantía', null=True, verbose_name='Fecha de vencimiento')),
                ('status', models.CharField(choices=[('PROPOSED', 'Propuesta'), ('ACCEPTED', 'Aceptada'), ('ACTIVE', 'Activa'), ('EXPIRED', 'Vencida'), ('EXECUTED', 'Ejecutada'), ('CANCELLED', 'Cancelada')], default='PROPOSED', max_length=15, verbose_name='Estado')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('verification_required', models.BooleanField(default=True, help_text='Indica si la garantía requiere verificación adicional', verbose_name='Requiere verificación')),
                ('verified', models.BooleanField(default=False, verbose_name='Verificada')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Verificada el')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizada el')),
                ('notes', models.TextField(blank=True, help_text='Información adicional sobre la garantía', verbose_name='Notas adicionales')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guarantees', to='contracts.landlordcontrolledcontract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_guarantees', to=settings.AUTH_USER_MODEL, verbose_name='Creada por')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_guarantees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Garantía de Contrato',
                'verbose_name_plural': 'Garantías de Contratos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContractWorkflowHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('CREATE', 'Crear Contrato'), ('UPDATE', 'Actualizar Contrato'), ('STATE_CHANGE', 'Cambio de Estado'), ('INVITE_TENANT', 'Invitar Arrendatario'), ('ACCEPT_INVITATION', 'Aceptar Invitación'), ('SUBMIT_OBJECTION', 'Presentar Objeción'), ('RESPOND_OBJECTION', 'Responder Objeción'), ('APPROVE', 'Aprobar Contrato'), ('SIGN', 'Firmar Contrato'), ('PUBLISH', 'Publicar Contrato'), ('CANCEL', 'Cancelar Contrato'), ('TERMINATE', 'Terminar Contrato'), ('ADD_GUARANTEE', 'Agregar Garantía'), ('MODIFY_GUARANTEE', 'Modificar Garantía'), ('VERIFY_GUARANTEE', 'Verificar Garantía'), ('SYSTEM_ACTION', 'Acción del Sistema')], max_length=20, verbose_name='Tipo de acción')),
                ('action_description', models.CharField(help_text='Descripción breve de lo que ocurrió', max_length=500, verbose_name='Descripción de la acción')),
                ('user_role', models.CharField(choices=[('landlord', 'Arrendador'), ('tenant', 'Arrendatario'), ('system', 'Sistema'), ('admin', 'Administrador')], max_length=20, verbose_name='Rol del usuario')),
                ('old_state', models.CharField(blank=True, max_length=30, verbose_name='Estado anterior')),
                ('new_state', models.CharField(blank=True, max_length=30, verbose_name='Nuevo estado')),
                ('changes_made', models.JSONField(default=dict, help_text='Detalles específicos de los cambios realizados', verbose_name='Cambios realizados')),
                ('metadata', models.JSONField(default=dict, help_text='Información adicional relevante para la acción', verbose_name='Metadatos adicionales')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, help_text='Información del navegador/dispositivo', verbose_name='User Agent')),
                ('session_id', models.CharField(blank=True, max_length=255, verbose_name='ID de sesión')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('integrity_hash', models.CharField(blank=True, help_text='Hash SHA-256 para verificar integridad del registro', max_length=64, verbose_name='Hash de integridad')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history_entries', to='contracts.landlordcontrolledcontract')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_actions', to=settings.AUTH_USER_MODEL, verbose_name='Realizado por')),
                ('related_guarantee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_entries', to='contracts.landlordcontractguarantee')),
                ('related_objection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_entries', to='contracts.contractobjection')),
            ],
            options={
                'verbose_name': 'Historial de Workflow',
                'verbose_name_plural': 'Historiales de Workflow',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='contractobjection',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objections', to='contracts.landlordcontrolledcontract'),
        ),
        migrations.AddIndex(
            model_name='landlordcontrolledcontract',
            index=models.Index(fields=['landlord', 'current_state'], name='contracts_l_landlor_ebcd9e_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontrolledcontract',
            index=models.Index(fields=['tenant', 'current_state'], name='contracts_l_tenant__8585fc_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontrolledcontract',
            index=models.Index(fields=['invitation_token'], name='contracts_l_invitat_9ae968_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontrolledcontract',
            index=models.Index(fields=['contract_number'], name='contracts_l_contrac_d4155f_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontrolledcontract',
            index=models.Index(fields=['published', 'start_date'], name='contracts_l_publish_15e119_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontractguarantee',
            index=models.Index(fields=['contract', 'guarantee_type'], name='contracts_l_contrac_743916_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontractguarantee',
            index=models.Index(fields=['status', 'is_active'], name='contracts_l_status_6f9660_idx'),
        ),
        migrations.AddIndex(
            model_name='landlordcontractguarantee',
            index=models.Index(fields=['expiry_date'], name='contracts_l_expiry__fcb784_idx'),
        ),
        migrations.AddIndex(
            model_name='contractworkflowhistory',
            index=models.Index(fields=['contract', 'timestamp'], name='contracts_c_contrac_a4b967_idx'),
        ),
        migrations.AddIndex(
            model_name='contractworkflowhistory',
            index=models.Index(fields=['performed_by', 'action_type'], name='contracts_c_perform_1904a7_idx'),
        ),
        migrations.AddIndex(
            model_name='contractworkflowhistory',
            index=models.Index(fields=['timestamp'], name='contracts_c_timesta_daffae_idx'),
        ),
        migrations.AddIndex(
            model_name='contractobjection',
            index=models.Index(fields=['contract', 'status'], name='contracts_c_contrac_d31c32_idx'),
        ),
        migrations.AddIndex(
            model_name='contractobjection',
            index=models.Index(fields=['status', 'priority'], name='contracts_c_status_174a25_idx'),
        ),
    ]
