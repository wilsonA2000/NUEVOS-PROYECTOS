# Configuración de Nginx para VeriHome Producción
# Optimizada para alto rendimiento y seguridad

# Configuración global
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimización de eventos
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # Configuración de tipos MIME y logging
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Formato de logs personalizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    
    # Optimizaciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Compresión Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Configuración de buffers
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Configuración de timeouts
    client_header_timeout 30s;
    client_body_timeout 30s;
    send_timeout 30s;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    
    # Configuración de SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Headers de seguridad
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.mapbox.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com *.mapbox.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: *.mapbox.com; connect-src 'self' *.mapbox.com;" always;
    
    # Upstream para Django
    upstream django_backend {
        least_conn;
        server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
        # Agregar más servidores aquí para load balancing
        # server 127.0.0.1:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;
        return 301 https://$server_name$request_uri;
    }
    
    # Configuración principal HTTPS
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;
        
        # Certificados SSL (Let's Encrypt recomendado)
        ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
        
        # Logs específicos del sitio
        access_log /var/log/nginx/verihome_access.log main;
        error_log /var/log/nginx/verihome_error.log;
        
        # Configuración de archivos estáticos con cache agresivo
        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Rate limiting para archivos estáticos
            limit_req zone=static burst=50 nodelay;
            
            # Compresión específica para estáticos
            gzip_static on;
            
            # Headers de seguridad para estáticos
            add_header X-Content-Type-Options nosniff;
            
            # Fallback para archivos no encontrados
            try_files $uri $uri/ =404;
        }
        
        # Configuración de archivos multimedia
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public";
            
            # Límites de seguridad para uploads
            client_max_body_size 50m;
            
            # Headers de seguridad
            add_header X-Content-Type-Options nosniff;
            
            try_files $uri $uri/ =404;
        }
        
        # API endpoints con rate limiting específico
        location /api/ {
            # Rate limiting más estricto para APIs
            limit_req zone=api burst=20 nodelay;
            
            # Headers CORS para API
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Access-Control-Allow-Credentials true always;
            
            # Manejar preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # Proxy a Django
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts para API
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering para mejor performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Admin panel con rate limiting estricto
        location /admin/ {
            limit_req zone=auth burst=5 nodelay;
            
            # Proxy a Django
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers de seguridad adicionales para admin
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
        }
        
        # Aplicación principal (frontend React)
        location / {
            # Intentar servir archivos estáticos primero, luego index.html para SPA
            try_files $uri $uri/ /index.html;
            root /app/staticfiles/frontend;
            
            # Cache para HTML
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
            
            # Cache para JS y CSS
            location ~* \.(js|css)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Cache para imágenes
            location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
                expires 6M;
                add_header Cache-Control "public, immutable";
            }
            
            # Cache para fuentes
            location ~* \.(woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Access-Control-Allow-Origin *;
            }
        }
        
        # Health check endpoint
        location /health/ {
            access_log off;
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
        }
        
        location ~ /(requirements|manage\.py|\.env) {
            deny all;
        }
        
        # Websockets para tiempo real (si se implementa)
        location /ws/ {
            proxy_pass http://django_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Configuración para monitoreo
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}