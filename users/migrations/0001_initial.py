# Generated by Django 5.2.3 on 2025-06-15 20:14

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('user_type', models.CharField(choices=[('landlord', 'Arrendador'), ('tenant', 'Arrendatario'), ('service_provider', 'Prestador de Servicios')], max_length=20, verbose_name='Tipo de usuario')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de verificación')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Número de teléfono')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LandlordProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de la empresa')),
                ('property_types', models.JSONField(default=list, help_text='Tipos de propiedades que maneja', verbose_name='Tipos de propiedades')),
                ('total_properties', models.PositiveIntegerField(default=0, verbose_name='Total de propiedades')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('property_ownership_docs', models.FileField(blank=True, null=True, upload_to='documents/property_ownership/', verbose_name='Documentos de propiedad')),
                ('business_license', models.FileField(blank=True, null=True, upload_to='documents/business_license/', verbose_name='Licencia de negocio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='landlord_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendador',
                'verbose_name_plural': 'Perfiles de Arrendadores',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('service_category', models.CharField(choices=[('maintenance', 'Mantenimiento'), ('cleaning', 'Limpieza'), ('security', 'Seguridad'), ('landscaping', 'Jardinería'), ('plumbing', 'Plomería'), ('electrical', 'Electricidad'), ('painting', 'Pintura'), ('carpentry', 'Carpintería'), ('legal', 'Servicios Legales'), ('real_estate', 'Asesoría Inmobiliaria'), ('insurance', 'Seguros'), ('photography', 'Fotografía'), ('inspection', 'Inspección'), ('other', 'Otros')], max_length=20, verbose_name='Categoría de servicio')),
                ('specialties', models.JSONField(default=list, help_text='Lista de especialidades específicas', verbose_name='Especialidades')),
                ('service_description', models.TextField(max_length=1000, verbose_name='Descripción del servicio')),
                ('service_areas', models.JSONField(default=list, help_text='Ciudades o zonas donde presta servicios', verbose_name='Áreas de servicio')),
                ('business_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del negocio')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tarifa por hora')),
                ('minimum_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Cargo mínimo')),
                ('available_weekdays', models.JSONField(default=list, help_text='Lista de días de la semana disponibles', verbose_name='Días disponibles')),
                ('available_hours_start', models.TimeField(blank=True, null=True, verbose_name='Hora de inicio')),
                ('available_hours_end', models.TimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('professional_license', models.FileField(blank=True, null=True, upload_to='documents/professional_license/', verbose_name='Licencia profesional')),
                ('insurance_certificate', models.FileField(blank=True, null=True, upload_to='documents/insurance/', verbose_name='Certificado de seguro')),
                ('certifications', models.FileField(blank=True, null=True, upload_to='documents/certifications/', verbose_name='Certificaciones')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Prestador de Servicios',
                'verbose_name_plural': 'Perfiles de Prestadores de Servicios',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(max_length=500, verbose_name='Descripción')),
                ('image', models.ImageField(blank=True, null=True, upload_to='portfolio/', verbose_name='Imagen')),
                ('project_date', models.DateField(blank=True, null=True, verbose_name='Fecha del proyecto')),
                ('client_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del cliente')),
                ('project_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo del proyecto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_items', to='users.serviceproviderprofile')),
            ],
            options={
                'verbose_name': 'Elemento del Portafolio',
                'verbose_name_plural': 'Elementos del Portafolio',
                'ordering': ['-project_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Ingresos mensuales')),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Empleado'), ('self_employed', 'Trabajador independiente'), ('student', 'Estudiante'), ('unemployed', 'Desempleado'), ('retired', 'Jubilado')], max_length=20, verbose_name='Estado laboral')),
                ('employer_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del empleador')),
                ('employer_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono del empleador')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono de emergencia')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, verbose_name='Relación')),
                ('credit_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Puntuación crediticia')),
                ('income_proof', models.FileField(blank=True, null=True, upload_to='documents/income_proof/', verbose_name='Comprobante de ingresos')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='documents/employment/', verbose_name='Carta laboral')),
                ('bank_statements', models.FileField(blank=True, null=True, upload_to='documents/bank_statements/', verbose_name='Estados de cuenta')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendatario',
                'verbose_name_plural': 'Perfiles de Arrendatarios',
            },
        ),
    ]
