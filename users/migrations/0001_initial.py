# Generated by Django 4.2.7 on 2025-07-06 17:50

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('user_type', models.CharField(choices=[('landlord', 'Arrendador'), ('tenant', 'Arrendatario'), ('service_provider', 'Prestador de Servicios')], max_length=20, verbose_name='Tipo de usuario')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de verificación')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Número de teléfono')),
                ('whatsapp', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='WhatsApp')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Masculino'), ('female', 'Femenino'), ('other', 'Otro'), ('prefer_not_to_say', 'Prefiero no decir')], max_length=20, null=True, verbose_name='Género')),
                ('nationality', models.CharField(default='Colombiana', max_length=100, verbose_name='Nacionalidad')),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Soltero/a'), ('married', 'Casado/a'), ('divorced', 'Divorciado/a'), ('widowed', 'Viudo/a'), ('other', 'Otro')], max_length=20, null=True, verbose_name='Estado civil')),
                ('country', models.CharField(default='Colombia', max_length=100, verbose_name='País')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Empleado'), ('self_employed', 'Trabajador Independiente'), ('student', 'Estudiante'), ('unemployed', 'Desempleado'), ('retired', 'Jubilado')], max_length=20, null=True, verbose_name='Estado laboral')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Ingresos mensuales')),
                ('currency', models.CharField(choices=[('COP', 'Pesos Colombianos'), ('USD', 'Dólares Americanos')], default='COP', max_length=3, verbose_name='Moneda')),
                ('employer_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del empleador')),
                ('job_title', models.CharField(blank=True, max_length=200, verbose_name='Cargo')),
                ('years_employed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Años de empleo')),
                ('source', models.CharField(blank=True, choices=[('google', 'Google'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('referral', 'Recomendación'), ('advertisement', 'Anuncio'), ('other', 'Otro')], max_length=20, null=True, verbose_name='Fuente de registro')),
                ('marketing_consent', models.BooleanField(default=False, verbose_name='Consentimiento de marketing')),
                ('initial_rating', models.PositiveSmallIntegerField(default=0, verbose_name='Calificación inicial')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='messaging_user_set', related_query_name='messaging_user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='AdminActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Crear'), ('update', 'Actualizar'), ('delete', 'Eliminar'), ('view', 'Ver'), ('export', 'Exportar'), ('impersonate', 'Suplantar'), ('login', 'Iniciar sesión'), ('logout', 'Cerrar sesión'), ('password_reset', 'Restablecer contraseña'), ('permission_change', 'Cambiar permisos'), ('bulk_action', 'Acción masiva'), ('system_config', 'Configuración del sistema'), ('data_migration', 'Migración de datos'), ('security_action', 'Acción de seguridad'), ('other', 'Otro')], max_length=20, verbose_name='Tipo de acción')),
                ('model_name', models.CharField(blank=True, max_length=100, verbose_name='Modelo')),
                ('object_id', models.CharField(blank=True, max_length=255, verbose_name='ID del objeto')),
                ('object_repr', models.CharField(blank=True, max_length=255, verbose_name='Representación del objeto')),
                ('description', models.TextField(blank=True, default='', verbose_name='Descripción')),
                ('changes', models.JSONField(blank=True, default=dict, verbose_name='Cambios')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('admin_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Acción Administrativa',
                'verbose_name_plural': 'Registros de Acciones Administrativas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InterviewCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Código')),
                ('user_type', models.CharField(choices=[('landlord', 'Arrendador'), ('tenant', 'Arrendatario'), ('service_provider', 'Prestador de Servicios')], max_length=20, verbose_name='Tipo de usuario')),
                ('email', models.EmailField(blank=True, help_text='Email pre-autorizado para usar este código', max_length=254, verbose_name='Email asociado')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_used', models.BooleanField(default=False, verbose_name='Usado')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Válido desde')),
                ('valid_until', models.DateTimeField(verbose_name='Válido hasta')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('used_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de uso')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('max_uses', models.PositiveIntegerField(default=1, verbose_name='Usos máximos')),
                ('current_uses', models.PositiveIntegerField(default=0, verbose_name='Usos actuales')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_interview_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Código de Entrevista',
                'verbose_name_plural': 'Códigos de Entrevista',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notificaciones por email')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Notificaciones push')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='Notificaciones SMS')),
                ('whatsapp_notifications', models.BooleanField(default=False, verbose_name='Notificaciones WhatsApp')),
                ('message_notifications', models.BooleanField(default=True, verbose_name='Notificar nuevos mensajes')),
                ('property_alerts', models.BooleanField(default=True, verbose_name='Notificar actualizaciones de propiedades')),
                ('payment_reminders', models.BooleanField(default=True, verbose_name='Notificar recordatorios de pago')),
                ('newsletter', models.BooleanField(default=False, verbose_name='Notificaciones de marketing')),
                ('language', models.CharField(choices=[('es', 'Español'), ('en', 'Inglés'), ('pt', 'Portugués')], default='es', max_length=2, verbose_name='Idioma')),
                ('theme', models.CharField(choices=[('light', 'Claro'), ('dark', 'Oscuro'), ('auto', 'Automático')], default='light', max_length=10, verbose_name='Tema')),
                ('profile_visibility', models.CharField(choices=[('public', 'Público'), ('registered', 'Solo usuarios registrados'), ('contacts', 'Solo contactos'), ('private', 'Privado')], default='registered', max_length=20, verbose_name='Visibilidad del perfil')),
                ('show_contact_info', models.BooleanField(default=False, verbose_name='Mostrar información de contacto')),
                ('show_property_history', models.BooleanField(default=True, verbose_name='Mostrar historial de propiedades')),
                ('allow_messages', models.BooleanField(default=True, verbose_name='Permitir mensajes')),
                ('currency', models.CharField(choices=[('COP', 'Pesos Colombianos'), ('USD', 'Dólares Americanos')], default='COP', max_length=3, verbose_name='Moneda preferida')),
                ('timezone', models.CharField(default='America/Bogota', max_length=50, verbose_name='Zona horaria')),
                ('date_format', models.CharField(default='DD/MM/YYYY', max_length=20, verbose_name='Formato de fecha')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='Autenticación de dos factores')),
                ('login_notifications', models.BooleanField(default=True, verbose_name='Notificaciones de inicio de sesión')),
                ('session_timeout', models.PositiveIntegerField(default=30, verbose_name='Tiempo de sesión (minutos)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Usuario',
                'verbose_name_plural': 'Configuraciones de Usuario',
            },
        ),
        migrations.CreateModel(
            name='UserResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('nationality', models.CharField(default='Mexicana', max_length=100, verbose_name='Nacionalidad')),
                ('marital_status', models.CharField(blank=True, max_length=50, verbose_name='Estado civil')),
                ('dependents', models.PositiveIntegerField(default=0, verbose_name='Número de dependientes')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono de emergencia')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, verbose_name='Relación')),
                ('emergency_contact_address', models.CharField(blank=True, max_length=255, verbose_name='Dirección de emergencia')),
                ('education_level', models.CharField(blank=True, choices=[('primary', 'Primaria'), ('secondary', 'Secundaria'), ('high_school', 'Preparatoria'), ('bachelor', 'Licenciatura'), ('master', 'Maestría'), ('doctorate', 'Doctorado'), ('technical', 'Técnico'), ('other', 'Otro')], max_length=20, verbose_name='Nivel educativo')),
                ('institution_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de la institución')),
                ('field_of_study', models.CharField(blank=True, max_length=200, verbose_name='Campo de estudio')),
                ('graduation_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año de graduación')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Promedio')),
                ('current_employer', models.CharField(blank=True, max_length=200, verbose_name='Empleador actual')),
                ('current_position', models.CharField(blank=True, max_length=200, verbose_name='Cargo actual')),
                ('employment_type', models.CharField(blank=True, choices=[('full_time', 'Tiempo completo'), ('part_time', 'Tiempo parcial'), ('contract', 'Por contrato'), ('freelance', 'Freelance'), ('temporary', 'Temporal'), ('internship', 'Pasante'), ('self_employed', 'Trabajador independiente')], max_length=20, verbose_name='Tipo de empleo')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('monthly_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Salario mensual')),
                ('supervisor_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del supervisor')),
                ('supervisor_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono del supervisor')),
                ('supervisor_email', models.EmailField(blank=True, max_length=254, verbose_name='Email del supervisor')),
                ('bank_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del banco')),
                ('account_type', models.CharField(blank=True, max_length=50, verbose_name='Tipo de cuenta')),
                ('account_number', models.CharField(blank=True, max_length=50, verbose_name='Número de cuenta')),
                ('credit_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Puntuación crediticia')),
                ('monthly_expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Gastos mensuales')),
                ('reference1_name', models.CharField(blank=True, max_length=200, verbose_name='Referencia 1 - Nombre')),
                ('reference1_phone', models.CharField(blank=True, max_length=15, verbose_name='Referencia 1 - Teléfono')),
                ('reference1_email', models.EmailField(blank=True, max_length=254, verbose_name='Referencia 1 - Email')),
                ('reference1_relation', models.CharField(blank=True, max_length=100, verbose_name='Referencia 1 - Relación')),
                ('reference2_name', models.CharField(blank=True, max_length=200, verbose_name='Referencia 2 - Nombre')),
                ('reference2_phone', models.CharField(blank=True, max_length=15, verbose_name='Referencia 2 - Teléfono')),
                ('reference2_email', models.EmailField(blank=True, max_length=254, verbose_name='Referencia 2 - Email')),
                ('reference2_relation', models.CharField(blank=True, max_length=100, verbose_name='Referencia 2 - Relación')),
                ('previous_addresses', models.JSONField(blank=True, default=list, verbose_name='Direcciones anteriores')),
                ('eviction_history', models.BooleanField(default=False, verbose_name='Historial de desalojo')),
                ('eviction_details', models.TextField(blank=True, verbose_name='Detalles de desalojo')),
                ('rental_history', models.JSONField(blank=True, default=list, verbose_name='Historial de rentas')),
                ('id_document', models.FileField(blank=True, null=True, upload_to='resume/id/', verbose_name='Documento de identificación')),
                ('id_document_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado del documento de ID')),
                ('proof_of_income', models.FileField(blank=True, null=True, upload_to='resume/income/', verbose_name='Comprobante de ingresos')),
                ('proof_of_income_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado del comprobante de ingresos')),
                ('bank_statement', models.FileField(blank=True, null=True, upload_to='resume/bank/', verbose_name='Estado de cuenta bancario')),
                ('bank_statement_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado del estado de cuenta')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='resume/employment/', verbose_name='Carta laboral')),
                ('employment_letter_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado de la carta laboral')),
                ('tax_return', models.FileField(blank=True, null=True, upload_to='resume/tax/', verbose_name='Declaración de impuestos')),
                ('tax_return_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado de la declaración de impuestos')),
                ('credit_report', models.FileField(blank=True, null=True, upload_to='resume/credit/', verbose_name='Reporte crediticio')),
                ('credit_report_status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', max_length=20, verbose_name='Estado del reporte crediticio')),
                ('criminal_record', models.BooleanField(default=False, verbose_name='Antecedentes penales')),
                ('criminal_record_details', models.TextField(blank=True, verbose_name='Detalles de antecedentes penales')),
                ('criminal_record_document', models.FileField(blank=True, null=True, upload_to='resume/criminal/', verbose_name='Documento de antecedentes penales')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Hoja de vida completa')),
                ('verification_score', models.PositiveIntegerField(default=0, verbose_name='Puntuación de verificación')),
                ('verification_notes', models.TextField(blank=True, verbose_name='Notas de verificación')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de verificación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resume', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hoja de Vida',
                'verbose_name_plural': 'Hojas de Vida',
            },
        ),
        migrations.CreateModel(
            name='UserActionNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('admin_action', 'Acción administrativa'), ('security_alert', 'Alerta de seguridad'), ('account_change', 'Cambio en la cuenta'), ('data_access', 'Acceso a datos'), ('system_notification', 'Notificación del sistema')], max_length=20, verbose_name='Tipo de notificación')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('is_read', models.BooleanField(default=False, verbose_name='Leída')),
                ('is_important', models.BooleanField(default=False, verbose_name='Importante')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de lectura')),
                ('action_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='users.adminactionlog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación de Acción',
                'verbose_name_plural': 'Notificaciones de Acciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='Colombia', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Ingresos mensuales')),
                ('currency', models.CharField(choices=[('COP', 'Pesos Colombianos'), ('USD', 'Dólares Americanos')], default='COP', max_length=3, verbose_name='Moneda')),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Empleado'), ('self_employed', 'Trabajador independiente'), ('student', 'Estudiante'), ('unemployed', 'Desempleado'), ('retired', 'Jubilado')], max_length=20, verbose_name='Estado laboral')),
                ('employer_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del empleador')),
                ('job_title', models.CharField(blank=True, max_length=200, verbose_name='Cargo')),
                ('years_employed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Años de empleo')),
                ('income_proof', models.FileField(blank=True, null=True, upload_to='documents/income/', verbose_name='Comprobante de ingresos')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='documents/employment/', verbose_name='Carta laboral')),
                ('bank_statements', models.FileField(blank=True, null=True, upload_to='documents/bank/', verbose_name='Extractos bancarios')),
                ('has_pets', models.BooleanField(default=False, verbose_name='Tiene mascotas')),
                ('pets_description', models.TextField(blank=True, max_length=500, verbose_name='Descripción de mascotas')),
                ('smokes', models.BooleanField(default=False, verbose_name='Fuma')),
                ('has_children', models.BooleanField(default=False, verbose_name='Tiene hijos')),
                ('children_count', models.PositiveIntegerField(default=0, verbose_name='Número de hijos')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono contacto de emergencia')),
                ('preferred_property_types', models.JSONField(default=list, verbose_name='Tipos de propiedad preferidos')),
                ('preferred_locations', models.JSONField(default=list, verbose_name='Ubicaciones preferidas')),
                ('max_rent_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Presupuesto máximo de renta')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendatario',
                'verbose_name_plural': 'Perfiles de Arrendatarios',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='Colombia', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de la empresa')),
                ('service_types', models.JSONField(default=list, help_text='Tipos de servicios que ofrece', verbose_name='Tipos de servicios')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tarifa por hora')),
                ('service_areas', models.JSONField(default=list, help_text='Ciudades o zonas donde presta servicios', verbose_name='Áreas de servicio')),
                ('max_distance_km', models.PositiveIntegerField(default=50, help_text='Distancia máxima que está dispuesto a viajar', verbose_name='Distancia máxima (km)')),
                ('available_monday', models.BooleanField(default=True, verbose_name='Disponible lunes')),
                ('available_tuesday', models.BooleanField(default=True, verbose_name='Disponible martes')),
                ('available_wednesday', models.BooleanField(default=True, verbose_name='Disponible miércoles')),
                ('available_thursday', models.BooleanField(default=True, verbose_name='Disponible jueves')),
                ('available_friday', models.BooleanField(default=True, verbose_name='Disponible viernes')),
                ('available_saturday', models.BooleanField(default=False, verbose_name='Disponible sábado')),
                ('available_sunday', models.BooleanField(default=False, verbose_name='Disponible domingo')),
                ('work_start_time', models.TimeField(blank=True, null=True, verbose_name='Hora de inicio')),
                ('work_end_time', models.TimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('professional_license', models.FileField(blank=True, null=True, upload_to='documents/licenses/', verbose_name='Licencia profesional')),
                ('insurance_certificate', models.FileField(blank=True, null=True, upload_to='documents/insurance/', verbose_name='Certificado de seguro')),
                ('certifications', models.JSONField(default=list, help_text='Lista de certificaciones profesionales', verbose_name='Certificaciones')),
                ('has_own_tools', models.BooleanField(default=True, verbose_name='Tiene herramientas propias')),
                ('has_vehicle', models.BooleanField(default=True, verbose_name='Tiene vehículo')),
                ('accepts_emergency_calls', models.BooleanField(default=False, verbose_name='Acepta llamadas de emergencia')),
                ('emergency_rate_multiplier', models.DecimalField(decimal_places=1, default=1.5, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(3.0)], verbose_name='Multiplicador tarifa emergencia')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Prestador de Servicios',
                'verbose_name_plural': 'Perfiles de Prestadores de Servicios',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(max_length=1000, verbose_name='Descripción')),
                ('item_type', models.CharField(choices=[('work_sample', 'Muestra de trabajo'), ('certification', 'Certificación'), ('award', 'Premio'), ('project', 'Proyecto'), ('publication', 'Publicación'), ('reference', 'Referencia'), ('other', 'Otro')], max_length=20, verbose_name='Tipo')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('file', models.FileField(blank=True, null=True, upload_to='portfolio/', verbose_name='Archivo')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('is_public', models.BooleanField(default=True, verbose_name='Público')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Elemento del portafolio',
                'verbose_name_plural': 'Elementos del portafolio',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LandlordProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='Colombia', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de la empresa')),
                ('property_types', models.JSONField(default=list, help_text='Tipos de propiedades que maneja', verbose_name='Tipos de propiedades')),
                ('total_properties', models.PositiveIntegerField(default=0, verbose_name='Total de propiedades')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('property_ownership_docs', models.FileField(blank=True, null=True, upload_to='documents/property_ownership/', verbose_name='Documentos de propiedad')),
                ('business_license', models.FileField(blank=True, null=True, upload_to='documents/business_license/', verbose_name='Licencia de negocio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='landlord_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendador',
                'verbose_name_plural': 'Perfiles de Arrendadores',
            },
        ),
        migrations.CreateModel(
            name='InterviewSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_data', models.JSONField(default=dict, verbose_name='Datos de la entrevista')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Puntuación')),
                ('recommendation', models.TextField(blank=True, verbose_name='Recomendación')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Completa')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de finalización')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duración (minutos)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('interview_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='users.interviewcode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión de Entrevista',
                'verbose_name_plural': 'Sesiones de Entrevista',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre completo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono')),
                ('company', models.CharField(blank=True, max_length=200, verbose_name='Empresa')),
                ('request_type', models.CharField(choices=[('landlord_info', 'Información para arrendadores'), ('tenant_info', 'Información para arrendatarios'), ('service_info', 'Información para prestadores de servicios'), ('general_inquiry', 'Consulta general'), ('partnership', 'Propuesta de partnership'), ('support', 'Soporte técnico'), ('other', 'Otro')], max_length=20, verbose_name='Tipo de solicitud')),
                ('subject', models.CharField(max_length=200, verbose_name='Asunto')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En progreso'), ('responded', 'Respondido'), ('closed', 'Cerrado'), ('spam', 'Spam')], default='pending', max_length=20, verbose_name='Estado')),
                ('response', models.TextField(blank=True, verbose_name='Respuesta')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de respuesta')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('referrer', models.URLField(blank=True, verbose_name='Referrer')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_contact_requests', to=settings.AUTH_USER_MODEL)),
                ('interview_code_sent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.interviewcode')),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responded_contact_requests', to=settings.AUTH_USER_MODEL)),
                ('resulted_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_request', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud de Contacto',
                'verbose_name_plural': 'Solicitudes de Contacto',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminImpersonationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(verbose_name='Razón de suplantación')),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Hora de inicio')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.CharField(max_length=255, verbose_name='User Agent')),
                ('admin_user', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='admin_sessions', to=settings.AUTH_USER_MODEL)),
                ('impersonated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión de Suplantación',
                'verbose_name_plural': 'Sesiones de Suplantación',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddField(
            model_name='adminactionlog',
            name='impersonation_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='users.adminimpersonationsession'),
        ),
        migrations.AddField(
            model_name='user',
            name='interview_code',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='users.interviewcode'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='messaging_user_set', related_query_name='messaging_user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Inicio de sesión'), ('logout', 'Cierre de sesión'), ('password_change', 'Cambio de contraseña'), ('password_reset', 'Restablecimiento de contraseña'), ('profile_update', 'Actualización de perfil'), ('property_view', 'Vista de propiedad'), ('property_create', 'Creación de propiedad'), ('property_update', 'Actualización de propiedad'), ('property_delete', 'Eliminación de propiedad'), ('property_favorite', 'Propiedad favorita'), ('property_unfavorite', 'Propiedad no favorita'), ('property_inquiry', 'Consulta de propiedad'), ('contract_create', 'Creación de contrato'), ('contract_sign', 'Firma de contrato'), ('contract_update', 'Actualización de contrato'), ('contract_cancel', 'Cancelación de contrato'), ('payment_made', 'Pago realizado'), ('payment_received', 'Pago recibido'), ('message_sent', 'Mensaje enviado'), ('message_read', 'Mensaje leído'), ('rating_given', 'Calificación dada'), ('rating_received', 'Calificación recibida'), ('document_upload', 'Carga de documento'), ('document_download', 'Descarga de documento'), ('account_verify', 'Verificación de cuenta'), ('settings_change', 'Cambio de configuración'), ('support_ticket', 'Ticket de soporte'), ('api_access', 'Acceso API'), ('export_data', 'Exportación de datos'), ('import_data', 'Importación de datos'), ('search', 'Búsqueda'), ('filter_apply', 'Aplicación de filtros'), ('notification_read', 'Notificación leída'), ('other', 'Otro')], max_length=30, verbose_name='Tipo de actividad')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('model_name', models.CharField(blank=True, max_length=100, verbose_name='Modelo')),
                ('object_id', models.CharField(blank=True, max_length=255, verbose_name='ID del objeto')),
                ('object_repr', models.CharField(blank=True, max_length=255, verbose_name='Representación del objeto')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadatos')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='Clave de sesión')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('location_city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('location_country', models.CharField(blank=True, max_length=100, verbose_name='País')),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo de respuesta (ms)')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Actividad',
                'verbose_name_plural': 'Registros de Actividad',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='users_usera_timesta_4287c0_idx'), models.Index(fields=['user', '-timestamp'], name='users_usera_user_id_832d5b_idx'), models.Index(fields=['activity_type', '-timestamp'], name='users_usera_activit_bcb95e_idx'), models.Index(fields=['user', 'activity_type', '-timestamp'], name='users_usera_user_id_aec1bd_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminSessionSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('total_actions', models.PositiveIntegerField(default=0, verbose_name='Total de acciones')),
                ('actions_by_type', models.JSONField(default=dict, verbose_name='Acciones por tipo')),
                ('impersonation_time', models.DurationField(default=datetime.timedelta, verbose_name='Tiempo de suplantación')),
                ('unique_users_affected', models.PositiveIntegerField(default=0, verbose_name='Usuarios únicos afectados')),
                ('models_accessed', models.JSONField(default=list, verbose_name='Modelos accedidos')),
                ('critical_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones críticas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_summaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resumen de Sesión Administrativa',
                'verbose_name_plural': 'Resúmenes de Sesiones Administrativas',
                'ordering': ['-date'],
                'unique_together': {('admin_user', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['-timestamp'], name='users_admin_timesta_b3920c_idx'),
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['admin_user', '-timestamp'], name='users_admin_admin_u_a77794_idx'),
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['action_type', '-timestamp'], name='users_admin_action__0abd6a_idx'),
        ),
    ]
