# Generated by Django 5.2.3 on 2025-06-28 03:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OldInterviewCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='VH-0000', max_length=8, unique=True, verbose_name='Código de entrevista')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('is_used', models.BooleanField(default=False, verbose_name='Utilizado')),
                ('initial_rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Calificación inicial')),
                ('notes', models.TextField(blank=True, verbose_name='Notas de entrevista')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de expiración')),
            ],
            options={
                'verbose_name': 'Código de Entrevista',
                'verbose_name_plural': 'Códigos de Entrevista',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('user_type', models.CharField(choices=[('landlord', 'Arrendador'), ('tenant', 'Arrendatario'), ('service_provider', 'Prestador de Servicios')], max_length=20, verbose_name='Tipo de usuario')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de verificación')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='Número de teléfono')),
                ('initial_rating', models.PositiveSmallIntegerField(default=0, verbose_name='Calificación inicial')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='messaging_user_set', related_query_name='messaging_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='messaging_user_set', related_query_name='messaging_user', to='auth.permission', verbose_name='user permissions')),
                ('interview_code', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to='users.oldinterviewcode')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='AdminImpersonationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Iniciado en')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminado en')),
                ('session_key', models.CharField(max_length=40, verbose_name='Clave de sesión')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('reason', models.TextField(blank=True, max_length=500, verbose_name='Motivo de la impersonación')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_sessions_as_admin', to=settings.AUTH_USER_MODEL, verbose_name='Administrador')),
                ('impersonated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_sessions_as_target', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Impersonado')),
            ],
            options={
                'verbose_name': 'Sesión de Impersonación',
                'verbose_name_plural': 'Sesiones de Impersonación',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('contract_create', 'Crear Contrato'), ('contract_edit', 'Editar Contrato'), ('contract_delete', 'Eliminar Contrato'), ('contract_sign', 'Firmar Contrato'), ('contract_download', 'Descargar Contrato'), ('payment_create', 'Crear Pago'), ('payment_verify', 'Verificar Pago'), ('payment_refund', 'Reembolsar Pago'), ('payment_approve', 'Aprobar Pago'), ('property_create', 'Crear Propiedad'), ('property_edit', 'Editar Propiedad'), ('property_delete', 'Eliminar Propiedad'), ('property_approve', 'Aprobar Propiedad'), ('user_create', 'Crear Usuario'), ('user_edit', 'Editar Usuario'), ('user_suspend', 'Suspender Usuario'), ('user_activate', 'Activar Usuario'), ('user_password_reset', 'Resetear Contraseña'), ('rating_create', 'Crear Calificación'), ('rating_edit', 'Editar Calificación'), ('rating_delete', 'Eliminar Calificación'), ('rating_approve', 'Aprobar Calificación'), ('message_send', 'Enviar Mensaje'), ('message_delete', 'Eliminar Mensaje'), ('system_config', 'Configuración del Sistema'), ('data_export', 'Exportar Datos'), ('data_import', 'Importar Datos'), ('impersonation_start', 'Iniciar Impersonación'), ('impersonation_stop', 'Detener Impersonación'), ('other', 'Otro')], max_length=30, verbose_name='Tipo de acción')),
                ('action_description', models.TextField(verbose_name='Descripción detallada de la acción')),
                ('target_object_type', models.CharField(blank=True, max_length=50, verbose_name='Tipo de objeto')),
                ('target_object_id', models.CharField(blank=True, max_length=50, verbose_name='ID del objeto')),
                ('target_object_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del objeto')),
                ('old_data', models.JSONField(blank=True, default=dict, verbose_name='Datos anteriores')),
                ('new_data', models.JSONField(blank=True, default=dict, verbose_name='Datos nuevos')),
                ('changed_fields', models.JSONField(blank=True, default=list, verbose_name='Campos modificados')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('geolocation', models.JSONField(blank=True, default=dict, verbose_name='Geolocalización')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('success', models.BooleanField(default=True, verbose_name='Exitosa')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('error_traceback', models.TextField(blank=True, verbose_name='Traceback del error')),
                ('session_duration', models.DurationField(blank=True, null=True, verbose_name='Duración de la sesión')),
                ('browser_info', models.JSONField(blank=True, default=dict, verbose_name='Información del navegador')),
                ('device_info', models.JSONField(blank=True, default=dict, verbose_name='Información del dispositivo')),
                ('notify_user', models.BooleanField(default=True, verbose_name='Notificar al usuario')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='Notificación enviada')),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Notificación enviada en')),
                ('impersonation_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='users.adminimpersonationsession', verbose_name='Sesión de Impersonación')),
            ],
            options={
                'verbose_name': 'Registro de Acción Administrativa',
                'verbose_name_plural': 'Registros de Acciones Administrativas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AdminSessionSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_actions', models.PositiveIntegerField(default=0, verbose_name='Total de acciones')),
                ('successful_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones exitosas')),
                ('failed_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones fallidas')),
                ('contract_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones en contratos')),
                ('payment_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones en pagos')),
                ('property_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones en propiedades')),
                ('user_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones en usuarios')),
                ('rating_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones en calificaciones')),
                ('system_actions', models.PositiveIntegerField(default=0, verbose_name='Acciones del sistema')),
                ('session_duration', models.DurationField(blank=True, null=True, verbose_name='Duración de la sesión')),
                ('average_action_time', models.DurationField(blank=True, null=True, verbose_name='Tiempo promedio por acción')),
                ('objects_created', models.PositiveIntegerField(default=0, verbose_name='Objetos creados')),
                ('objects_modified', models.PositiveIntegerField(default=0, verbose_name='Objetos modificados')),
                ('objects_deleted', models.PositiveIntegerField(default=0, verbose_name='Objetos eliminados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado en')),
                ('impersonation_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='users.adminimpersonationsession', verbose_name='Sesión de Impersonación')),
            ],
            options={
                'verbose_name': 'Resumen de Sesión Administrativa',
                'verbose_name_plural': 'Resúmenes de Sesiones Administrativas',
            },
        ),
        migrations.CreateModel(
            name='LandlordProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de la empresa')),
                ('property_types', models.JSONField(default=list, help_text='Tipos de propiedades que maneja', verbose_name='Tipos de propiedades')),
                ('total_properties', models.PositiveIntegerField(default=0, verbose_name='Total de propiedades')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('property_ownership_docs', models.FileField(blank=True, null=True, upload_to='documents/property_ownership/', verbose_name='Documentos de propiedad')),
                ('business_license', models.FileField(blank=True, null=True, upload_to='documents/business_license/', verbose_name='Licencia de negocio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='landlord_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendador',
                'verbose_name_plural': 'Perfiles de Arrendadores',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('service_category', models.CharField(choices=[('maintenance', 'Mantenimiento'), ('cleaning', 'Limpieza'), ('security', 'Seguridad'), ('landscaping', 'Jardinería'), ('plumbing', 'Plomería'), ('electrical', 'Electricidad'), ('painting', 'Pintura'), ('carpentry', 'Carpintería'), ('legal', 'Servicios Legales'), ('real_estate', 'Asesoría Inmobiliaria'), ('insurance', 'Seguros'), ('photography', 'Fotografía'), ('inspection', 'Inspección'), ('other', 'Otros')], max_length=20, verbose_name='Categoría de servicio')),
                ('specialties', models.JSONField(default=list, help_text='Lista de especialidades específicas', verbose_name='Especialidades')),
                ('service_description', models.TextField(max_length=1000, verbose_name='Descripción del servicio')),
                ('service_areas', models.JSONField(default=list, help_text='Ciudades o zonas donde presta servicios', verbose_name='Áreas de servicio')),
                ('business_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del negocio')),
                ('years_experience', models.PositiveIntegerField(default=0, verbose_name='Años de experiencia')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tarifa por hora')),
                ('minimum_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Cargo mínimo')),
                ('available_weekdays', models.JSONField(default=list, help_text='Lista de días de la semana disponibles', verbose_name='Días disponibles')),
                ('available_hours_start', models.TimeField(blank=True, null=True, verbose_name='Hora de inicio')),
                ('available_hours_end', models.TimeField(blank=True, null=True, verbose_name='Hora de fin')),
                ('professional_license', models.FileField(blank=True, null=True, upload_to='documents/professional_license/', verbose_name='Licencia profesional')),
                ('insurance_certificate', models.FileField(blank=True, null=True, upload_to='documents/insurance/', verbose_name='Certificado de seguro')),
                ('certifications', models.FileField(blank=True, null=True, upload_to='documents/certifications/', verbose_name='Certificaciones')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Prestador de Servicios',
                'verbose_name_plural': 'Perfiles de Prestadores de Servicios',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(max_length=500, verbose_name='Descripción')),
                ('image', models.ImageField(blank=True, null=True, upload_to='portfolio/', verbose_name='Imagen')),
                ('project_date', models.DateField(blank=True, null=True, verbose_name='Fecha del proyecto')),
                ('client_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del cliente')),
                ('project_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Costo del proyecto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_items', to='users.serviceproviderprofile')),
            ],
            options={
                'verbose_name': 'Elemento del Portafolio',
                'verbose_name_plural': 'Elementos del Portafolio',
                'ordering': ['-project_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1000, verbose_name='Biografía')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Imagen de perfil')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(default='México', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Código postal')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitud')),
                ('identification_document', models.FileField(blank=True, null=True, upload_to='documents/identification/', verbose_name='Documento de identificación')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='documents/address/', verbose_name='Comprobante de domicilio')),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='videos/presentations/', verbose_name='Video de presentación')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Ingresos mensuales')),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Empleado'), ('self_employed', 'Trabajador independiente'), ('student', 'Estudiante'), ('unemployed', 'Desempleado'), ('retired', 'Jubilado')], max_length=20, verbose_name='Estado laboral')),
                ('employer_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del empleador')),
                ('employer_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono del empleador')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Contacto de emergencia')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono de emergencia')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, verbose_name='Relación')),
                ('credit_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Puntuación crediticia')),
                ('income_proof', models.FileField(blank=True, null=True, upload_to='documents/income_proof/', verbose_name='Comprobante de ingresos')),
                ('employment_letter', models.FileField(blank=True, null=True, upload_to='documents/employment/', verbose_name='Carta laboral')),
                ('bank_statements', models.FileField(blank=True, null=True, upload_to='documents/bank_statements/', verbose_name='Estados de cuenta')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Arrendatario',
                'verbose_name_plural': 'Perfiles de Arrendatarios',
            },
        ),
        migrations.CreateModel(
            name='UserActionNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'En la aplicación'), ('push', 'Notificación push')], max_length=20, verbose_name='Tipo de notificación')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensaje detallado')),
                ('summary', models.TextField(max_length=500, verbose_name='Resumen')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviada'), ('delivered', 'Entregada'), ('read', 'Leída'), ('failed', 'Fallida')], default='pending', max_length=20, verbose_name='Estado')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviada en')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Entregada en')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Leída en')),
                ('delivery_attempts', models.PositiveIntegerField(default=0, verbose_name='Intentos de entrega')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creada en')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expira en')),
                ('admin_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to='users.adminactionlog', verbose_name='Acción administrativa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_action_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Usuario notificado')),
            ],
            options={
                'verbose_name': 'Notificación de Acción Administrativa',
                'verbose_name_plural': 'Notificaciones de Acciones Administrativas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=50, verbose_name='Tipo de actividad')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Detalles')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('performed_by_admin', models.BooleanField(default=False, verbose_name='Realizada por administrador')),
                ('admin_action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activity_logs', to='users.adminactionlog', verbose_name='Acción administrativa relacionada')),
                ('admin_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_activities', to=settings.AUTH_USER_MODEL, verbose_name='Administrador que realizó la acción')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Registro de Actividad del Usuario',
                'verbose_name_plural': 'Registros de Actividad del Usuario',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['timestamp'], name='users_admin_timesta_c69969_idx'),
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['action_type'], name='users_admin_action__d41c95_idx'),
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['target_object_type', 'target_object_id'], name='users_admin_target__1abb77_idx'),
        ),
        migrations.AddIndex(
            model_name='adminactionlog',
            index=models.Index(fields=['impersonation_session', 'timestamp'], name='users_admin_imperso_51b6a3_idx'),
        ),
        migrations.AddIndex(
            model_name='useractionnotification',
            index=models.Index(fields=['user', 'status'], name='users_usera_user_id_8bde87_idx'),
        ),
        migrations.AddIndex(
            model_name='useractionnotification',
            index=models.Index(fields=['created_at'], name='users_usera_created_2d4526_idx'),
        ),
        migrations.AddIndex(
            model_name='useractionnotification',
            index=models.Index(fields=['notification_type', 'status'], name='users_usera_notific_a64fde_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user', 'timestamp'], name='users_usera_user_id_8957e1_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['activity_type'], name='users_usera_activit_9c7179_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['performed_by_admin'], name='users_usera_perform_7bbaa3_idx'),
        ),
    ]
