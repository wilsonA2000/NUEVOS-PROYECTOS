# Generated by Django 4.2.7 on 2025-08-24 18:48

from django.db import migrations


def delete_all_properties(apps, schema_editor):
    """
    Delete all existing properties to start fresh
    """
    Property = apps.get_model('properties', 'Property')
    PropertyImage = apps.get_model('properties', 'PropertyImage')
    PropertyVideo = apps.get_model('properties', 'PropertyVideo')
    PropertyAmenityRelation = apps.get_model('properties', 'PropertyAmenityRelation')
    PropertyFavorite = apps.get_model('properties', 'PropertyFavorite')
    PropertyView = apps.get_model('properties', 'PropertyView')
    PropertyInquiry = apps.get_model('properties', 'PropertyInquiry')
    
    print("üóëÔ∏è Limpiando base de datos de propiedades...")
    
    # Delete all related data first
    count_inquiries = PropertyInquiry.objects.count()
    PropertyInquiry.objects.all().delete()
    print(f"   ‚úÖ Eliminadas {count_inquiries} consultas")
    
    count_views = PropertyView.objects.count()
    PropertyView.objects.all().delete()
    print(f"   ‚úÖ Eliminadas {count_views} visualizaciones")
    
    count_favorites = PropertyFavorite.objects.count()
    PropertyFavorite.objects.all().delete()
    print(f"   ‚úÖ Eliminados {count_favorites} favoritos")
    
    count_amenities = PropertyAmenityRelation.objects.count()
    PropertyAmenityRelation.objects.all().delete()
    print(f"   ‚úÖ Eliminadas {count_amenities} relaciones de amenidades")
    
    count_videos = PropertyVideo.objects.count()
    PropertyVideo.objects.all().delete()
    print(f"   ‚úÖ Eliminados {count_videos} videos")
    
    count_images = PropertyImage.objects.count()
    PropertyImage.objects.all().delete()
    print(f"   ‚úÖ Eliminadas {count_images} im√°genes")
    
    count_properties = Property.objects.count()
    Property.objects.all().delete()
    print(f"   ‚úÖ Eliminadas {count_properties} propiedades")
    
    print("üéâ Base de datos limpiada exitosamente - listo para crear propiedades desde cero")


def reverse_delete_properties(apps, schema_editor):
    """
    Reverse migration - no action needed
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0007_alter_property_postal_code'),
    ]

    operations = [
        migrations.RunPython(delete_all_properties, reverse_delete_properties),
    ]
